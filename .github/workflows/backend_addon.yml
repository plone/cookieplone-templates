name: Plone Backend Add-on CI
on:
  pull_request:
    paths:
      - "backend_addon/**"
      - ".github/workflows/backend_addon.yml"
  push:
    branches:
      - main
    paths:
      - "backend_addon/**"
      - ".github/workflows/backend_addon.yml"
  workflow_dispatch:

env:
  python-version: "3.12"

jobs:
  generation:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      # git checkout
      - name: Checkout codebase
        uses: actions/checkout@v4

      # python setup
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      # python install
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Test
      - name: Run tests
        run: |
          cd backend_addon
          python -m pytest tests

  functional:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4


      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ env.python-version }}
          enable-cache: false

      - name: Generate
        run: |
          COOKIEPLONE_REPOSITORY=$(pwd) uvx cookieplone backend_addon --no-input

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-${{ env.python-version }}-${{ hashFiles('collective.addon/pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ env.python-version }}-${{ hashFiles('collective.addon/pyproject.toml') }}
            uv-${{ runner.os }}-${{ env.python-version }}

      - name: Install generated package
        working-directory: collective.addon
        run: |
          make install

      - name: Run unit tests
        working-directory: collective.addon
        run: |
          make test
